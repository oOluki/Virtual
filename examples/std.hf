;; MIT License
;; 
;; Copyright (c) 2024 oOluki
;; 
;; Permission is hereby granted, free of charge, to any person obtaining a copy
;; of this software and associated documentation files (the "Software"), to deal
;; in the Software without restriction, including without limitation the rights
;; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
;; copies of the Software, and to permit persons to whom the Software is
;; furnished to do so, subject to the following conditions:
;; 
;; The above copyright notice and this permission notice shall be included in all
;; copies or substantial portions of the Software.
;; 
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;; SOFTWARE.
;; 




;; internal auxiliary labels for the factorial label
story_internal_factorial_case0: ;;for when n < 2 => n! = 1
    pop
    push 1
    swap
    jmp


;; calculates the factorial of the number behind the stack top (as_uint64) and returns to
;; the instruction on top of the stack
story_factorial:
    swap
    dup     ;; treat the case n < 2 => n! = 1
    push 2
    smalleru
    push story_internal_factorial_case0
    jmpf
    dup

    story_internal_factorial_loop: ;;;; stack at this point ret, n, n - 1
    dup
    push 1
    minusu
    gso 1
    gso 1
    set
    reads 2
    mulu
    gso 2
    gso 1
    set
    pop
    dup
    push 1
    eq
    push story_internal_factorial_loop
    jmpnf                                 ;; if n != 1 jump to loop

    pop
    swap
    jmp


#undef story_internal_factorial_case0
#undef story_internal_factorial_loop






